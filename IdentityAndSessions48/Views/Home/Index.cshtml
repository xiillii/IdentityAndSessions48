
@{
    ViewBag.Title = "Home";
}


<div class="panel panel-primary">
    <div class="panel-heading">User Details</div>
    <table class="table table-striped">
        @foreach (var key in Model.Keys)
        {
            <tr>
                <th>@key</th>
                <th>@Model[key]</th>
            </tr>
        }
    </table>
</div>
@Html.ActionLink("Sign Out", "Logout", "Account", null, new {@class = "btn btn-primary"})

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Session expiring</h4>
            </div>
            <div class="modal-body">
                Your session is about to expire!
                <br />
                <span id="CountDownHolder"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Dismiss</button>
                <button type="button" class="btn btn-primary" onclick="SessionTimeout.sendKeepAlive()">Keep alive</button>
            </div>
        </div>
    </div>
</div>

@functions
{
    public int PopupShowDelay => 60000 * (Session.Timeout - 1);
}

@section Scripts
{
    <script>
        window.SessionTimeout = (function () {
            var _timeLeft, _popupTimer, _countDownTimer;

            var stopTimers = function () {
                window.clearTimeout(_popupTimer);
                window.clearTimeout(_countDownTimer);
            }

            var updateCountDown = function () {
                var min = Math.floor(_timeLeft / 60);
                var sec = _timeLeft % 60;
                if (sec < 10)
                    sec = "0" + sec;

                document.getElementById("CountDownHolder").innerHTML = min + ":" + sec;

                if (_timeLeft > 0) {
                    _timeLeft--;
                    _countDownTimer = window.setTimeout(updateCountDown, 1000);
                } else {
                    document.location.href = '@Url.Action("Logout", "Account")';
                }
            };

            var showPopup = function () {
                _timeLeft = 60;
                updateCountDown();
                $('#myModal').modal();
            };

            var schedulePopup = function () {
                stopTimers();
                _popupTimer = window.setTimeout(showPopup, @PopupShowDelay);
            };

            var sendKeepAlive = function () {
                $.get("@Url.Action("Index", "KeepAlive", new {area = ""})",
                    null,
                    function (data) {
                        console.log(data);
                        stopTimers();
                        $('#myModal').modal('hide');
                        SessionTimeout.schedulePopup();
                    }
                );
                
            };

            return {
                schedulePopup: schedulePopup,
                sendKeepAlive: sendKeepAlive
            }
        })();

        SessionTimeout.schedulePopup();
    </script>
}
